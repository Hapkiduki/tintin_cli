import 'dart:convert';
import 'package:http/http.dart' as http;

class AIService {
  static const String _apiUrl = 'https://api.your-ai-service.com/v1/generate';

  static Future<Map<String, dynamic>> generateBrick(String description) async {
    try {
      final response = await http.post(
        Uri.parse(_apiUrl),
        headers: {'Content-Type': 'application/json'},
        body: jsonEncode({
          'description': description,
          'framework': 'flutter',
          'template_type': 'mason',
        }),
      );

      if (response.statusCode != 200) {
        throw Exception('AI API Error: ${response.statusCode}');
      }

      return jsonDecode(response.body) as Map<String, dynamic>;
    } catch (e) {
      throw Exception('AI Service Error: $e');
    }
  }

  // Mock version for testing
  static Future<Map<String, dynamic>> generateBrickMock(
    String description,
  ) async {
    return {
      'brick.yaml': '''
name: generated_feature
description: Feature generated by AI
version: 0.1.0
environment:
  mason: ">=0.1.0-dev.57 <0.1.0"
vars:
  feature_name:
    type: string
    description: Name of the feature
    prompt: What's the feature name?
''',
      'template_files': {
        'lib/features/{{feature_name.snakeCase()}}/{{feature_name.snakeCase()}}.dart':
            '''
import 'package:flutter/material.dart';

class {{feature_name.pascalCase()}} extends StatelessWidget {
  const {{feature_name.pascalCase()}}({super.key});

  @override
  Widget build(BuildContext context) {
    return const Placeholder();
  }
}
''',
      },
    };
  }
}
